// Loop through all collections in the current database
db.getCollectionNames().forEach(function(collectionName) {
  print("\nCollection: " + collectionName);
  
  // Use an aggregation pipeline to extract keys from each document,
  // filter keys starting with "n", and then group unique keys.
  const result = db.getCollection(collectionName).aggregate([
    {
      $project: {
        // Convert the document into an array of key-value pairs.
        fields: { $objectToArray: "$$ROOT" }
      }
    },
    // Unwind the array to get one document per field
    { $unwind: "$fields" },
    // Filter for keys that start with "n" (case-insensitive)
    { $match: { "fields.k": { $regex: "^n", $options: "i" } } },
    // Group all matching keys into a single set to avoid duplicates
    { $group: { _id: null, keys: { $addToSet: "$fields.k" } } }
  ]).toArray();

  // Print the results for this collection.
  if (result.length > 0) {
    print("Fields starting with 'n':");
    printjson(result[0].keys);
  } else {
    print("No fields starting with 'n' found.");
  }
});


///////// Function to Get collection Names starting with n 












